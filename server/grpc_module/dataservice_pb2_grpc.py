# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
import grpc

from . import dataservice_pb2 as dataservice__pb2


class DataServiceStub(object):
  # missing associated documentation comment in .proto file
  pass

  def __init__(self, channel):
    """Constructor.

    Args:
      channel: A grpc.Channel.
    """
    self.PredictPlayingGolf = channel.unary_unary(
        '/DataService/PredictPlayingGolf',
        request_serializer=dataservice__pb2.DataServiceRequest.SerializeToString,
        response_deserializer=dataservice__pb2.DataServiceRespond.FromString,
        )


class DataServiceServicer(object):
  # missing associated documentation comment in .proto file
  pass

  def PredictPlayingGolf(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')


def add_DataServiceServicer_to_server(servicer, server):
  rpc_method_handlers = {
      'PredictPlayingGolf': grpc.unary_unary_rpc_method_handler(
          servicer.PredictPlayingGolf,
          request_deserializer=dataservice__pb2.DataServiceRequest.FromString,
          response_serializer=dataservice__pb2.DataServiceRespond.SerializeToString,
      ),
  }
  generic_handler = grpc.method_handlers_generic_handler(
      'DataService', rpc_method_handlers)
  server.add_generic_rpc_handlers((generic_handler,))
